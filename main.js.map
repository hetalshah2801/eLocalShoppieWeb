{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/common/httpService/http.service.ts","./src/app/common/httpService/order.service.ts","./src/app/common/httpService/user.service.ts","./src/app/components/card/card.component.ts","./src/app/components/card/card.component.html","./src/app/components/cart/cart.component.ts","./src/app/components/cart/cart.component.html","./src/app/components/checkout-details/checkout-details.component.ts","./src/app/components/checkout-details/checkout-details.component.html","./src/app/components/home-page/home-page.component.ts","./src/app/components/home-page/home-page.component.html","./src/app/components/navigation-seller/navigation-seller.component.ts","./src/app/components/navigation-seller/navigation-seller.component.html","./src/app/components/navigation/navigation.component.ts","./src/app/components/navigation/navigation.component.html","./src/app/components/order/order.component.ts","./src/app/components/order/order.component.html","./src/app/components/product-add/product-add.component.ts","./src/app/components/product-add/product-add.component.html","./src/app/components/product-details/product-details.component.ts","./src/app/components/product-details/product-details.component.html","./src/app/components/product-edit/product-edit.component.ts","./src/app/components/product-edit/product-edit.component.html","./src/app/components/product-list/product-list.component.ts","./src/app/components/product-list/product-list.component.html","./src/app/components/shop-card/shop-card.component.ts","./src/app/components/shop-card/shop-card.component.html","./src/app/enum/OrderStatus.ts","./src/app/enum/Roles.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/models/Cart.ts","./src/app/models/ProductInOrder.ts","./src/app/models/User.ts","./src/app/models/UserLogin.ts","./src/app/models/Users.ts","./src/app/models/productInfo.ts","./src/app/otp-verification/otp-verification.component.ts","./src/app/otp-verification/otp-verification.component.html","./src/app/register-c/register-c.component.ts","./src/app/register-c/register-c.component.html","./src/app/register-s/register-s.component.ts","./src/app/register-s/register-s.component.html","./src/app/registers/registers.component.ts","./src/app/registers/registers.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport {HomeComponent } from './home/home.component';\r\nimport {RegisterSComponent} from './register-s/register-s.component';\r\nimport {RegisterCComponent} from './register-c/register-c.component';\r\nimport {RegistersComponent} from './registers/registers.component';\r\nimport {HomePageComponent} from './components/home-page/home-page.component';\r\nimport {CardComponent} from './components/card/card.component';\r\nimport {CartComponent} from './components/cart/cart.component';\r\nimport { OtpVerificationComponent } from './otp-verification/otp-verification.component';\r\nimport {ShopCardComponent} from './components/shop-card/shop-card.component';\r\nimport {ProductDetailsComponent} from './components/product-details/product-details.component';\r\nimport { ProductListComponent } from './components/product-list/product-list.component';\r\nimport { ProductEditComponent } from './components/product-edit/product-edit.component';\r\nimport { ProductAddComponent } from './components/product-add/product-add.component';\r\nimport {CheckoutDetailsComponent} from './components/checkout-details/checkout-details.component';\r\nimport {OrderComponent} from './components/order/order.component';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst routes: Routes = [{\r\n      path: '',\r\n      component: HomeComponent\r\n},\r\n{\r\n      path: 'login',\r\n      component: RegisterSComponent\r\n},\r\n{\r\n       path: 'RegisterCustomer',\r\n       component: RegisterCComponent\r\n },\r\n {\r\n          path: 'RegisterShopkeeper',\r\n          component: RegistersComponent\r\n    },\r\n    {\r\n        path: 'OTPVerification',\r\n        component: OtpVerificationComponent\r\n    },\r\n  {\r\n    path: 'homePage',\r\n    component: HomePageComponent\r\n  },\r\n  {\r\n    path: 'category/:id',\r\n    component: CardComponent\r\n  },\r\n  {\r\n    path: 'product-details/:id',\r\n    component: ProductDetailsComponent\r\n  },\r\n  {\r\n    path: 'checkout/:id',\r\n    component : CheckoutDetailsComponent\r\n  },\r\n  {\r\n    path: 'cart',\r\n    component: CartComponent\r\n  },\r\n  {\r\n    path: 'shop-cards/:id',\r\n    component: ShopCardComponent\r\n  },\r\n  {\r\n        path: 'product-list',\r\n        component: ProductListComponent\r\n  },\r\n  {\r\n          path: 'product-edit/:id',\r\n          component: ProductEditComponent\r\n   },\r\n   {\r\n             path: 'product-add/:id',\r\n             component: ProductAddComponent\r\n   },\r\n  {\r\n    path: 'orders/:id',\r\n    component: OrderComponent\r\n  },\r\n\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'wwc';\r\n}\r\n","<div class=\"container\">\r\n<router-outlet></router-outlet>\r\n</div>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { RegisterSComponent } from './register-s/register-s.component';\r\nimport {\r\n    MatToolbarModule,\r\n    MatMenuModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatTableModule,\r\n    MatDividerModule,\r\n    MatProgressSpinnerModule,\r\n    MatInputModule,\r\n    MatCardModule,\r\n    MatSlideToggleModule,\r\n    MatSelectModule,\r\n    MatOptionModule, MatListModule, MatTabsModule, MatExpansionModule, MatGridListModule\r\n} from '@angular/material';\r\nimport { RegisterCComponent } from './register-c/register-c.component';\r\nimport { RegistersComponent } from './registers/registers.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { NavigationComponent } from './components/navigation/navigation.component';\r\nimport { HomePageComponent } from './components/home-page/home-page.component';\r\nimport { CardComponent } from './components/card/card.component';\r\nimport { CartComponent } from './components/cart/cart.component';\r\nimport { OtpVerificationComponent } from './otp-verification/otp-verification.component';\r\nimport { ToastrModule } from 'ngx-toastr';\r\nimport {HttpClient, HttpClientModule} from '@angular/common/http';\r\nimport { ShopCardComponent } from './components/shop-card/shop-card.component';\r\nimport { ProductDetailsComponent } from './components/product-details/product-details.component';\r\nimport { ProductListComponent } from './components/product-list/product-list.component';\r\nimport { NavigationSellerComponent } from './components/navigation-seller/navigation-seller.component';\r\nimport { ProductEditComponent } from './components/product-edit/product-edit.component';\r\nimport { ProductAddComponent } from './components/product-add/product-add.component';\r\nimport { CheckoutDetailsComponent } from './components/checkout-details/checkout-details.component';\r\nimport { OrderComponent } from './components/order/order.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    RegisterSComponent,\r\n    RegisterCComponent,\r\n    RegistersComponent,\r\n    HomeComponent,\r\n    NavigationComponent,\r\n    HomePageComponent,\r\n    CardComponent,\r\n    CartComponent,\r\n    OtpVerificationComponent,\r\n    ShopCardComponent,\r\n    ProductDetailsComponent,\r\n    ProductListComponent,\r\n    NavigationSellerComponent,\r\n    ProductEditComponent,\r\n    ProductAddComponent,\r\n    CheckoutDetailsComponent,\r\n    OrderComponent\r\n  ],\r\n    imports: [\r\n        BrowserModule,\r\n        AppRoutingModule,\r\n        ReactiveFormsModule,\r\n        BrowserAnimationsModule,\r\n        MatToolbarModule,\r\n        MatInputModule,\r\n        MatCardModule,\r\n        MatMenuModule,\r\n        MatIconModule,\r\n        MatButtonModule,\r\n        MatTableModule,\r\n        MatDividerModule,\r\n        MatSlideToggleModule,\r\n        MatSelectModule,\r\n        MatOptionModule,\r\n        MatProgressSpinnerModule,\r\n        FormsModule,\r\n        HttpClientModule,\r\n        ToastrModule.forRoot(),\r\n        MatListModule,\r\n        MatTabsModule,\r\n        MatExpansionModule,\r\n        MatGridListModule\r\n\r\n    ],\r\n\r\n\r\n  providers: [HttpClientModule],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from \"rxjs\";\r\nimport {UserLogin} from '../../models/UserLogin';\r\nimport {User} from '../../models/User';\r\nimport {Users} from '../../models/Users';\r\nimport {Cart} from '../../models/Cart';\r\nimport {ProductInfo} from '../../models/productInfo';\r\n\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class HttpService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\npublic getOtp(phoneNumber): Observable<any>{\r\n    return this.http.post(`http://localhost:8090/otp/sendOtp?phoneNumber=`+phoneNumber,{});\r\n}\r\n\r\npublic verifyOtp(phoneNumber,otp):Observable<any>{\r\n return this.http.post(`http://localhost:8090/otp/verifyOtp?phoneNumber=`+phoneNumber+'&otp='+otp,{});\r\n\r\n}\r\n\r\n\r\n  public getProduct(productId): Observable<any>{\r\n   return this.http.get(`http://localhost:8090/products/`+productId);\r\n  }\r\n\r\n  public getAllShops(domain, pinCode): Observable<any>{\r\n    return this.http.get(`http://localhost:8090/getShopsByUserDetails/`+domain+`/`+pinCode);\r\n  }\r\n\r\n  public getAllProducts(id): Observable<any>{\r\n    return this.http.get(`http://localhost:8090/products/getProductsByCategory/`+id);\r\n  }\r\n\r\n  public addToCart(cartItem:Cart): Observable<any>{\r\n    console.log(cartItem);\r\n    return this.http.post<Cart>(`http://localhost:8090/carts/`, cartItem);\r\n  }\r\n\r\n  public getCart(buyerId): Observable<any>{\r\n    return this.http.get(`http://localhost:8090/carts/`+buyerId);\r\n  }\r\n\r\n\r\n  public login(user: UserLogin): Observable<User> {\r\n    return this.http.post<User>(`http://localhost:8090/loginUser/`,user);\r\n  }\r\n\r\n  public signups(user: Users): Observable<Users>{\r\n    return this.http.post<Users>(`http://localhost:8090/users/`,user);\r\n    }\r\n\r\n   public signc(user: User):Observable<User>{\r\n       return this.http.post<User>(`http://localhost:8090/users/`,user);\r\n\r\n   }\r\n   public addProduct(productInfo: ProductInfo):Observable<ProductInfo>{\r\n          return this.http.post<ProductInfo>(`http://localhost:8090/products/`,productInfo);\r\n\r\n      }\r\n\r\n   public geOrders(productId): Observable<any> {\r\n       return this.http.get(`http://localhost:8090/products/`+productId);\r\n     }\r\n\r\n   public updateProduct(productInfo: ProductInfo):Observable<ProductInfo>{\r\n             return this.http.put<ProductInfo>(`http://localhost:8090/updateProduct/`,productInfo);\r\n\r\n         }\r\n\r\n }\r\n\r\n\r\n\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport {Observable, of} from 'rxjs';\r\nimport {Order} from '../../models/Order';\r\nimport {catchError} from 'rxjs/operators';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {apiUrl} from '../../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class OrderService {\r\n\r\n  private orderUrl = `${apiUrl}/orders`;\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  geOrders(buyerId): Observable<any> {\r\n    return this.http.get(`${this.orderUrl}/getBuyerOrders/`+buyerId);\r\n  }\r\n\r\n  show(id): Observable<Order> {\r\n    return this.http.get<Order>(`${this.orderUrl}/${id}`).pipe(\r\n      catchError(_ => of(null))\r\n    );\r\n  }\r\n\r\n  cancel(id): Observable<Order> {\r\n    return this.http.patch<Order>(`${this.orderUrl}/cancel/${id}`, null).pipe(\r\n      catchError(_ => of(null))\r\n    );\r\n  }\r\n\r\n  finish(id): Observable<Order> {\r\n    return this.http.patch<Order>(`${this.orderUrl}/finish/${id}`, null).pipe(\r\n      catchError(_ => of(null))\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {JwtResponse} from '../../response/JwtResponse';\r\nimport {BehaviorSubject, Observable, Subject} from 'rxjs';\r\nimport {CookieService} from 'ngx-cookie-service';\r\nimport {HttpClient} from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n\r\n  private currentUserSubject: BehaviorSubject<JwtResponse>;\r\n  public currentUser: Observable<JwtResponse>;\r\n  public nameTerms = new Subject<string>();\r\n  public name$ = this.nameTerms.asObservable();\r\n  constructor(private http: HttpClient,\r\n              private cookieService: CookieService) {\r\n    const memo = localStorage.getItem('currentUser');\r\n    this.currentUserSubject = new BehaviorSubject<JwtResponse>(JSON.parse(memo));\r\n    this.currentUser = this.currentUserSubject.asObservable();\r\n    cookieService.set('currentUser', memo);\r\n  }\r\n\r\n  get currentUserValue() {\r\n    return this.currentUserSubject.value;\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {ActivatedRoute} from '@angular/router';\r\nimport {Shop} from '../../models/shop';\r\nimport {HttpService} from '../../common/httpService/http.service';\r\nimport {ProductInfo} from '../../models/productInfo';\r\n\r\n@Component({\r\n  selector: 'app-card',\r\n  templateUrl: './card.component.html',\r\n  styleUrls: ['./card.component.scss']\r\n})\r\nexport class CardComponent implements OnInit {\r\n\r\n  products;\r\n  categories;\r\n  categoryMap : Map<string,ProductInfo> = new Map<string, ProductInfo>()\r\n  title = '';\r\n\r\n  constructor(private route : ActivatedRoute,\r\n              private http : HttpService) { }\r\n\r\n  ngOnInit(): void {\r\n    const shopId = this.route.snapshot.paramMap.get(\"id\");\r\n    console.log(shopId);\r\n    this.loadProducts(shopId);\r\n\r\n  }\r\n\r\n  loadProducts(id){\r\n    this.http.getAllProducts(id).subscribe( response => {\r\n      console.log(response);\r\n      this.categories = Object.keys(response);\r\n      Object.keys(response).forEach((key: Extract<keyof typeof response, string>) => {\r\n        this.categoryMap.set(key,response[key]);\r\n      });\r\n      this.showCategoryProducts(this.categories[0]);\r\n      console.log(this.categories);\r\n      console.log(this.categoryMap);\r\n    });\r\n  }\r\n\r\n  showCategoryProducts(category){\r\n    this.title = category;\r\n    this.products = this.categoryMap.get(category);\r\n  }\r\n\r\n}\r\n","<app-navigation></app-navigation>\r\n<div class=\"p-2\">\r\n  <!--Grid row-->\r\n  <div class=\"row\">\r\n    <div class=\"col-lg-4 mb-4\">\r\n      <!--Card-->\r\n      <div class=\"card z-depth-0 border border-light rounded-0\">\r\n\r\n        <!--Card content-->\r\n        <div class=\"card-body\">\r\n          <h4 class=\"mb-4 mt-1 h5 text-center font-weight-bold\">Categories</h4>\r\n          <hr>\r\n          <dl class=\"row\" *ngFor=\"let type of categories\">\r\n            <dd class=\"col button\">\r\n              <button mat-button class=\"button\" (click)=\"showCategoryProducts(type)\">{{type}}</button>\r\n            </dd>\r\n          </dl>\r\n        </div>\r\n\r\n      </div>\r\n      <!--/.Card-->\r\n    </div>\r\n    <div class=\"col-lg-8\">\r\n\r\n      <div class=\"p-2\">\r\n      <h2 align=\"center\" class=\"display-4 mb-5\">{{title}}</h2>\r\n      <div class=\"row card-deck text-center\">\r\n        <div *ngFor=\"let productInfo of products\" class=\"col-lg-6\">\r\n          <div class=\"card mb-4\"  >\r\n            <img height=\"50%\" class=\"card-img-top\" src=\"{{productInfo.productIcon}}\" alt=\"{{productInfo.productName}}\">\r\n            <div class=\"card-body\">\r\n              <h4 class=\"card-title \">{{productInfo.productName}}</h4>\r\n              <div class=\"text-left\">\r\n                <p class=\"card-text\"><strong>Description: </strong>{{productInfo.description}}</p>\r\n                <p class=\"card-text\"><strong>Price: </strong>{{productInfo.productPrice}}</p>\r\n              </div>\r\n              <br>\r\n              <a routerLink=\"/product-details/{{productInfo.productId}}\"\r\n                 class=\"btn btn-primary btn-lg\"\r\n              >Details</a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n<!--&lt;!&ndash;<app-pagination  [currentPage]=\"page\" ></app-pagination>&ndash;&gt;-->\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {Shop} from '../../models/shop';\r\nimport {HttpService} from '../../common/httpService/http.service';\r\nimport {ProductInOrder} from '../../models/ProductInOrder';\r\nimport {Router} from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-cart',\r\n  templateUrl: './cart.component.html',\r\n  styleUrls: ['./cart.component.scss']\r\n})\r\nexport class CartComponent implements OnInit {\r\n\r\n  userId = '2';\r\n  shop :any ={\r\n    name: '',\r\n    items: 0,\r\n    subTotal:0\r\n  };\r\n  shops =[];\r\n  shopname :any;\r\n  shopMap: Map<string,ProductInOrder[]> = new Map<string, ProductInOrder[]>();\r\n\r\n\r\n  constructor(private http: HttpService,\r\n              private router : Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.http.getCart(this.userId).subscribe( response =>{\r\n      console.log(response);\r\n      Object.keys(response).forEach((key: Extract<keyof typeof response, string>) => {\r\n        this.shopname = response[key][0].shopName;\r\n        this.shopMap.set(this.shopname,response[key]);\r\n      });\r\n      console.log(this.shopMap);\r\n      this.shopname = Object.keys(this.shopMap);\r\n\r\n      this.shopMap.forEach((value: ProductInOrder[], key : string) => {\r\n        // console.log(key,value);\r\n        this.shop = {};\r\n        this.shop.name = key;\r\n        this.shop.items = value.length;\r\n        this.shop.subTotal = value.reduce(\r\n          (prev, cur) => prev + cur.count * cur.productPrice, 0);\r\n        console.log(this.shop);\r\n        this.shops.push(this.shop);\r\n      })\r\n      console.log(this.shops);\r\n    });\r\n  }\r\n\r\n  checkout(){\r\n    this.router.navigateByUrl('/orders/'+this.userId);\r\n  }\r\n\r\n  // = [\r\n  //   {\r\n  //     id : '1',\r\n  //     shopName : 'abc',\r\n  //     deliveryAddress : 'abc',\r\n  //     shopIcon : 'assets/images/groceries.jpg',\r\n  //     shopCategory : 1\r\n  //   },\r\n  //   {\r\n  //     shopId : '2',\r\n  //     shopName : 'abc',\r\n  //     shopLocality : 'abc',\r\n  //     shopIcon : 'assets/images/groceries.jpg',\r\n  //     shopCategory : 1\r\n  //   },\r\n  //   {\r\n  //     shopId : '3',\r\n  //     shopName : 'abc',\r\n  //     shopLocality : 'abc',\r\n  //     shopIcon : 'assets/images/groceries.jpg',\r\n  //     shopCategory : 1\r\n  //   },\r\n  //   {\r\n  //     shopId : '4',\r\n  //     shopName : 'abc',\r\n  //     shopLocality : 'abc',\r\n  //     shopIcon : 'assets/images/groceries.jpg',\r\n  //     shopCategory : 1\r\n  //   }\r\n  // ];\r\n\r\n\r\n  step = 0;\r\n\r\n  setStep(index: number) {\r\n    this.step = index;\r\n  }\r\n\r\n  nextStep() {\r\n    this.step++;\r\n  }\r\n\r\n  prevStep() {\r\n    this.step--;\r\n  }\r\n\r\n  hidePrevButton(step){\r\n    if(step === 0 || step === this.shops.length-1)\r\n      return true;\r\n    else\r\n      return false;\r\n  }\r\n\r\n  hideNextButton(step){\r\n    if(step === this.shops.length-1)\r\n      return true;\r\n    else\r\n      return false;\r\n  }\r\n\r\n}\r\n","<app-navigation></app-navigation>\r\n<div class=\"p-2\">\r\n  <h1 align=\"center\" class=\"display-4 mb-5\">My Cart</h1>\r\n<mat-accordion class=\"example-headers-align\">\r\n  <div *ngFor=\"let shop of shops; let i=index\">\r\n    <mat-expansion-panel [expanded]=\"step === i\" (opened)=\"setStep(i)\" hideToggle>\r\n      <mat-expansion-panel-header>\r\n        <mat-panel-title>{{shop.name}}\r\n        </mat-panel-title>\r\n        <mat-panel-description class=\"mat-expansion-description\">\r\n          <p>Items : {{shop.items}} </p>\r\n          <p>Subtotal : {{shop.subTotal}}</p>\r\n          <p>Status</p>\r\n        </mat-panel-description>\r\n      </mat-expansion-panel-header>\r\n      <div class=\"container my-5 py-3 z-depth-1 rounded mat-card\">\r\n        <!--Section: Content-->\r\n        <section class=\"dark-grey-text\">\r\n          <!-- Shopping Cart table -->\r\n          <div class=\"table-responsive\">\r\n            <table class=\"table product-table mb-0\">\r\n              <!-- Table head -->\r\n              <thead class=\"mdb-color lighten-5\">\r\n              <tr>\r\n                <th></th>\r\n                <th class=\"font-weight-bold\">\r\n                  <strong>Product</strong>\r\n                </th>\r\n                <th></th>\r\n                <th class=\"font-weight-bold\">\r\n                  <strong>Price</strong>\r\n                </th>\r\n                <th class=\"font-weight-bold\">\r\n                  <strong>QTY</strong>\r\n                </th>\r\n                <th class=\"font-weight-bold\">\r\n                  <strong>Amount</strong>\r\n                </th>\r\n                <th></th>\r\n              </tr>\r\n              </thead>\r\n              <!-- /.Table head -->\r\n\r\n              <!-- Table body -->\r\n              <tbody>\r\n\r\n              <!-- First row -->\r\n              <tr *ngFor=\"let product of shopMap.get(shop.name)\">\r\n                <th scope=\"row\">\r\n                  <img src=\"https://mdbootstrap.com/img/Photos/Horizontal/E-commerce/Products/13.jpg\" alt=\"\" class=\"img-fluid z-depth-0\">\r\n                </th>\r\n                <td>\r\n                  <h5 class=\"mt-3\">\r\n                    <strong>{{product.productName}}</strong>\r\n                  </h5>\r\n                  <p class=\"text-muted\">{{product.description}}</p>\r\n                </td>\r\n                <td></td>\r\n                <td>{{product.productPrice}}</td>\r\n                <td>\r\n                    <strong>  {{product.count}}</strong>\r\n<!--                  <input type=\"number\" value=\"{{product.count}}\" aria-label=\"Search\" class=\"form-control\" style=\"width: 100px\">-->\r\n                </td>\r\n                <td class=\"font-weight-bold\">\r\n                  <strong>{{product.productPrice*product.count}}</strong>\r\n                </td>\r\n                <td>\r\n                  <button type=\"button\" class=\"btn btn-sm btn-primary\" data-toggle=\"tooltip\" data-placement=\"top\"\r\n                          title=\"Remove item\">X\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n              <!-- /.First row -->\r\n\r\n              <!-- Fourth row -->\r\n              <tr>\r\n                <td colspan=\"3\"></td>\r\n                <td>\r\n                  <h4 class=\"mt-2\">\r\n                    <strong>Total</strong>\r\n                  </h4>\r\n                </td>\r\n                <td class=\"text-right\">\r\n                  <h4 class=\"mt-2\">\r\n                    <strong>{{shop.subTotal | currency}}</strong>\r\n                  </h4>\r\n                </td>\r\n                <td colspan=\"3\" class=\"text-right\">\r\n                  <button type=\"button\" class=\"btn btn-primary btn-rounded\" (click)=\"checkout();\">Checkout\r\n                    <i class=\"fas fa-angle-right right\"></i>\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n              <!-- Fourth row -->\r\n              </tbody>\r\n              <!-- /.Table body -->\r\n            </table>\r\n          </div>\r\n          <!-- /.Shopping Cart table -->\r\n        </section>\r\n        <!--Section: Content-->\r\n      </div>\r\n\r\n\r\n      <mat-action-row>\r\n        <button [hidden]=\"hidePrevButton(i)\" mat-button color=\"warn\" (click)=\"prevStep()\">Previous</button>\r\n        <button [hidden]=\"hideNextButton(i)\" mat-button color=\"primary\" (click)=\"nextStep()\">Next</button>\r\n      </mat-action-row>\r\n    </mat-expansion-panel>\r\n  </div>\r\n\r\n</mat-accordion>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-checkout-details',\r\n  templateUrl: './checkout-details.component.html',\r\n  styleUrls: ['./checkout-details.component.scss']\r\n})\r\nexport class CheckoutDetailsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<app-navigation></app-navigation>\r\n\r\n<div class=\"container mt-5\">\r\n\r\n\r\n  <!--Section: Content-->\r\n  <section class=\"dark-grey-text\">\r\n\r\n          <!--Grid column-->\r\n          <div class=\"p-2\">\r\n\r\n            <mat-tab-group mat-stretch-tabs class=\"example-stretched-tabs mat-elevation-z4\">\r\n              <mat-tab label=\"Billing\">\r\n                <form>\r\n\r\n                  <!--Grid row-->\r\n                  <div class=\"row\">\r\n\r\n                    <!--Grid column-->\r\n                    <div class=\"col-md-6 mb-4\">\r\n\r\n                      <!--firstName-->\r\n                      <label for=\"firstName\" class=\"\">First name</label>\r\n                      <input type=\"text\" id=\"firstName\" class=\"form-control\">\r\n\r\n                    </div>\r\n                    <!--Grid column-->\r\n\r\n                    <!--Grid column-->\r\n                    <div class=\"col-md-6 mb-2\">\r\n\r\n                      <!--lastName-->\r\n                      <label for=\"lastName\" class=\"\">Last name</label>\r\n                      <input type=\"text\" id=\"lastName\" class=\"form-control\">\r\n\r\n                    </div>\r\n                    <!--Grid column-->\r\n\r\n                  </div>\r\n                  <!--Grid row-->\r\n\r\n                  <!--Username-->\r\n                  <div class=\"input-group mb-4\">\r\n                    <div class=\"input-group-prepend\">\r\n                      <span class=\"input-group-text\" id=\"basic-addon1\">@</span>\r\n                    </div>\r\n                    <input type=\"text\" class=\"form-control py-0\" placeholder=\"Username\" aria-describedby=\"basic-addon1\">\r\n                  </div>\r\n\r\n                  <!--email-->\r\n                  <label for=\"email\" class=\"\">Email (optional)</label>\r\n                  <input type=\"text\" id=\"email\" class=\"form-control mb-4\" placeholder=\"youremail@example.com\">\r\n\r\n                  <!--address-->\r\n                  <label for=\"address\" class=\"\">Address</label>\r\n                  <input type=\"text\" id=\"address\" class=\"form-control mb-4\" placeholder=\"1234 Main St\">\r\n\r\n                  <!--address-2-->\r\n                  <label for=\"address-2\" class=\"\">Address 2 (optional)</label>\r\n                  <input type=\"text\" id=\"address-2\" class=\"form-control mb-4\" placeholder=\"Apartment or suite\">\r\n\r\n                  <!--Grid row-->\r\n                  <div class=\"row\">\r\n\r\n                    <!--Grid column-->\r\n                    <div class=\"col-lg-4 col-md-12 mb-4\">\r\n\r\n                      <label for=\"country\">Country</label>\r\n                      <select class=\"custom-select d-block w-100\" id=\"country\" required>\r\n                        <option value=\"\">Choose...</option>\r\n                        <option>United States</option>\r\n                      </select>\r\n                      <div class=\"invalid-feedback\">\r\n                        Please select a valid country.\r\n                      </div>\r\n\r\n                    </div>\r\n                    <!--Grid column-->\r\n\r\n                    <!--Grid column-->\r\n                    <div class=\"col-lg-4 col-md-6 mb-4\">\r\n\r\n                      <label for=\"state\">State</label>\r\n                      <select class=\"custom-select d-block w-100\" id=\"state\" required>\r\n                        <option value=\"\">Choose...</option>\r\n                        <option>California</option>\r\n                      </select>\r\n                      <div class=\"invalid-feedback\">\r\n                        Please provide a valid state.\r\n                      </div>\r\n\r\n                    </div>\r\n                    <!--Grid column-->\r\n\r\n                    <!--Grid column-->\r\n                    <div class=\"col-lg-4 col-md-6 mb-4\">\r\n\r\n                      <label for=\"zip\">Zip</label>\r\n                      <input type=\"text\" class=\"form-control\" id=\"zip\" placeholder=\"\" required>\r\n                      <div class=\"invalid-feedback\">\r\n                        Zip code required.\r\n                      </div>\r\n\r\n                    </div>\r\n                    <!--Grid column-->\r\n\r\n                  </div>\r\n                  <!--Grid row-->\r\n\r\n                  <hr>\r\n\r\n                  <div class=\"mb-1\">\r\n                    <input type=\"checkbox\" class=\"form-check-input filled-in\" id=\"chekboxRules\">\r\n                    <label class=\"form-check-label\" for=\"chekboxRules\">I accept the terms and conditions</label>\r\n                  </div>\r\n                  <div class=\"mb-1\">\r\n                    <input type=\"checkbox\" class=\"form-check-input filled-in\" id=\"safeTheInfo\">\r\n                    <label class=\"form-check-label\" for=\"safeTheInfo\">Save this information for next time</label>\r\n                  </div>\r\n                  <div class=\"mb-1\">\r\n                    <input type=\"checkbox\" class=\"form-check-input filled-in\" id=\"subscribeNewsletter\">\r\n                    <label class=\"form-check-label\" for=\"subscribeNewsletter\">Subscribe to the newsletter</label>\r\n                  </div>\r\n\r\n                  <hr>\r\n\r\n                  <button class=\"btn btn-primary btn-lg btn-block\" type=\"submit\">Next step</button>\r\n\r\n                </form>\r\n\r\n              </mat-tab>\r\n\r\n              <mat-tab label=\"Payment\">\r\n                <div class=\"d-block my-3\">\r\n                  <div class=\"mb-2\">\r\n                    <input name=\"group2\" type=\"radio\" class=\"form-check-input with-gap\" id=\"radioWithGap4\" checked\r\n                           required>\r\n                    <label class=\"form-check-label\" for=\"radioWithGap4\">Credit card</label>\r\n                  </div>\r\n                  <div class=\"mb-2\">\r\n                    <input iname=\"group2\" type=\"radio\" class=\"form-check-input with-gap\" id=\"radioWithGap5\"\r\n                           required>\r\n                    <label class=\"form-check-label\" for=\"radioWithGap5\">Debit card</label>\r\n                  </div>\r\n                  <div class=\"mb-2\">\r\n                    <input name=\"group2\" type=\"radio\" class=\"form-check-input with-gap\" id=\"radioWithGap6\" required>\r\n                    <label class=\"form-check-label\" for=\"radioWithGap6\">Paypal</label>\r\n                  </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                  <div class=\"col-md-6 mb-3\">\r\n                    <label for=\"cc-name123\">Name on card</label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"cc-name123\" placeholder=\"\" required>\r\n                    <small class=\"text-muted\">Full name as displayed on card</small>\r\n                    <div class=\"invalid-feedback\">\r\n                      Name on card is required\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-md-6 mb-3\">\r\n                    <label for=\"cc-number123\">Credit card number</label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"cc-number123\" placeholder=\"\" required>\r\n                    <div class=\"invalid-feedback\">\r\n                      Credit card number is required\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                  <div class=\"col-md-3 mb-3\">\r\n                    <label for=\"cc-expiration123\">Expiration</label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"cc-expiration123\" placeholder=\"\" required>\r\n                    <div class=\"invalid-feedback\">\r\n                      Expiration date required\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-md-3 mb-3\">\r\n                    <label for=\"cc-cvv123\">CVV</label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"cc-cvv123\" placeholder=\"\" required>\r\n                    <div class=\"invalid-feedback\">\r\n                      Security code required\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <hr class=\"mb-4\">\r\n\r\n                <button class=\"btn btn-primary btn-lg btn-block\" type=\"submit\">Place order</button>\r\n              </mat-tab>\r\n\r\n              <mat-tab label=\"Summary\">\r\n                <button class=\"btn btn-primary btn-lg btn-block\" type=\"submit\" routerLink=\"/orders\">Place order</button>\r\n\r\n                <!--Card-->\r\n                <div class=\"card z-depth-0 border border-light rounded-0\">\r\n\r\n                  <!--Card content-->\r\n                  <div class=\"card-body\">\r\n                    <h4 class=\"mb-4 mt-1 h5 text-center font-weight-bold\">Summary</h4>\r\n\r\n                    <hr>\r\n\r\n                    <dl class=\"row\">\r\n                      <dd class=\"col-sm-8\">\r\n                        MDBootstrap UI KIT (jQuery version) - License 6-10 poeple + unlimited projects\r\n                      </dd>\r\n                      <dd class=\"col-sm-4\">\r\n                        $ 2000\r\n                      </dd>\r\n                    </dl>\r\n\r\n                    <hr>\r\n\r\n                    <dl class=\"row\">\r\n                      <dd class=\"col-sm-8\">\r\n                        Premium support - 2 years\r\n                      </dd>\r\n                      <dd class=\"col-sm-4\">\r\n                        $ 2000\r\n                      </dd>\r\n                    </dl>\r\n\r\n                    <hr>\r\n\r\n                    <dl class=\"row\">\r\n                      <dd class=\"col-sm-8\">\r\n                        MDB Membership - 2 years\r\n                      </dd>\r\n                      <dd class=\"col-sm-4\">\r\n                        $ 2000\r\n                      </dd>\r\n                    </dl>\r\n\r\n                    <hr>\r\n\r\n                    <dl class=\"row\">\r\n                      <dt class=\"col-sm-8\">\r\n                        Total\r\n                      </dt>\r\n                      <dt class=\"col-sm-4\">\r\n                        $ 2000\r\n                      </dt>\r\n                    </dl>\r\n                  </div>\r\n                </div>\r\n              </mat-tab>\r\n            </mat-tab-group>\r\n\r\n          </div>\r\n\r\n  </section>\r\n  <!--Section: Content-->\r\n\r\n\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home-page',\r\n  templateUrl: './home-page.component.html',\r\n  styleUrls: ['./home-page.component.scss']\r\n})\r\nexport class HomePageComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<app-navigation></app-navigation>\r\n<!--<link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/css/bootstrap.min.css\" rel=\"stylesheet\"/>-->\r\n<div class=\"flex-container p-2 \">\r\n    <mat-card>\r\n      <img src=\"assets/images/groceries.jpg\" routerLink=\"/shop-cards/Grocery\">\r\n      <h4>Groceries</h4>\r\n    </mat-card>\r\n    <mat-card>\r\n      <img src=\"assets/images/medicines.jpg\" routerLink=\"/shop-cards/Medicines\">\r\n      <h4>Medicines</h4>\r\n    </mat-card>\r\n    <mat-card>\r\n      <img src=\"assets/images/bakery.jpg\" routerLink=\"/shop-cards/Bakery\">\r\n      <h4>Bakery</h4>\r\n    </mat-card>\r\n\r\n\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-navigation-seller',\r\n  templateUrl: './navigation-seller.component.html',\r\n  styleUrls: ['./navigation-seller.component.scss']\r\n})\r\nexport class NavigationSellerComponent implements OnInit {\r\n\r\n  name: string;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  logout(){\r\n      console.log(\"Logout\");\r\n    }\r\n\r\n}\r\n","<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n  <a class=\"navbar-brand\" >\r\n    <!--    [routerLink]=\"root\">-->\r\n    <img src=\"/assets/brand.png\" width=\"30\" height=\"30\" class=\"d-inline-block align-top\" alt=\"\">\r\n    eLocalShoppie\r\n  </a>\r\n\r\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\"\r\n          aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n    <span class=\"navbar-toggler-icon\"></span>\r\n  </button>\r\n  <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n\r\n    <div class=\"navbar-nav\" >\r\n      <!--      *ngIf=\"!currentUser || currentUser.role == Roles.Customer\">-->\r\n\r\n      <a class=\"nav-item nav-link \"\r\n         routerLink=\"/product-list\">\r\n        All Products\r\n      </a>\r\n      <a class=\"nav-item nav-link\"\r\n         routerLink=\"/product-add/:id\">\r\n        Add products\r\n      </a>\r\n<!--      <a class=\"nav-item nav-link \"-->\r\n<!--         routerLink=\"/category/2\">-->\r\n<!--        Bakery-->\r\n<!--      </a>-->\r\n\r\n    </div>\r\n\r\n    <div class=\"navbar-nav ml-auto\">\r\n\r\n      <!--        *ngIf=\"!currentUser || currentUser.role == Roles.Customer\"-->\r\n<!--      <a class=\"nav-item nav-link \" routerLink=\"/cart\">-->\r\n<!--        <i class=\"fas fa-shopping-cart\"></i>-->\r\n<!--        Cart-->\r\n<!--      </a>-->\r\n\r\n      <ng-container >\r\n<!--        &lt;!&ndash;        *ngIf=\"currentUser; else noUser\">&ndash;&gt;-->\r\n<!--        <a class=\"nav-item nav-link \" routerLink=\"/order\">-->\r\n<!--          <i class=\"fas fa-list-ul\"></i>-->\r\n<!--          Orders-->\r\n<!--        </a>-->\r\n        <a class=\"nav-item nav-link \" routerLink=\"/profile\">\r\n          {{name}}\r\n        </a>\r\n        <a class=\"nav-item nav-link \" (click)=\"logout()\" routerLink=\"/login\" [queryParams]=\"{logout: true}\">\r\n          Sign Out\r\n        </a>\r\n      </ng-container>\r\n      <!--      <ng-template #noUser>-->\r\n      <!--        <a class=\"nav-item nav-link \" routerLink=\"/login\">-->\r\n      <!--          Sign In-->\r\n      <!--        </a>-->\r\n      <!--        <a class=\"nav-item nav-link \" routerLink=\"/register\">-->\r\n      <!--          Sign Up-->\r\n      <!--        </a>-->\r\n      <!--      </ng-template>-->\r\n    </div>\r\n  </div>\r\n</nav>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-navigation',\r\n  templateUrl: './navigation.component.html',\r\n  styleUrls: ['./navigation.component.scss']\r\n})\r\nexport class NavigationComponent implements OnInit {\r\n\r\n  name: string;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  logout(){\r\n    console.log(\"Logout\");\r\n  }\r\n\r\n}\r\n","<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n  <a class=\"navbar-brand\" >\r\n<!--    [routerLink]=\"root\">-->\r\n    <img src=\"/assets/brand.png\" width=\"30\" height=\"30\" class=\"d-inline-block align-top\" alt=\"\">\r\n    eLocalShoppie\r\n  </a>\r\n\r\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\"\r\n          aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n    <span class=\"navbar-toggler-icon\"></span>\r\n  </button>\r\n  <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n\r\n    <div class=\"navbar-nav\" >\r\n<!--      *ngIf=\"!currentUser || currentUser.role == Roles.Customer\">-->\r\n\r\n      <a class=\"nav-item nav-link \"\r\n         routerLink=\"/category/0\">\r\n        Groceries\r\n      </a>\r\n      <a class=\"nav-item nav-link\"\r\n         routerLink=\"/category/1\">\r\n        Medicines\r\n      </a>\r\n      <a class=\"nav-item nav-link \"\r\n         routerLink=\"/category/2\">\r\n        Bakery\r\n      </a>\r\n\r\n    </div>\r\n\r\n    <div class=\"navbar-nav ml-auto\">\r\n\r\n<!--        *ngIf=\"!currentUser || currentUser.role == Roles.Customer\"-->\r\n      <a class=\"nav-item nav-link \" routerLink=\"/cart\">\r\n        <i class=\"fas fa-shopping-cart\"></i>\r\n        Cart\r\n      </a>\r\n\r\n      <ng-container >\r\n<!--        *ngIf=\"currentUser; else noUser\">-->\r\n        <a class=\"nav-item nav-link \" routerLink=\"/order\">\r\n          <i class=\"fas fa-list-ul\"></i>\r\n          Orders\r\n        </a>\r\n        <a class=\"nav-item nav-link \" routerLink=\"/profile\">\r\n          {{name}}\r\n        </a>\r\n        <a class=\"nav-item nav-link \" (click)=\"logout()\" routerLink=\"/login\" [queryParams]=\"{logout: true}\">\r\n          Sign Out\r\n        </a>\r\n      </ng-container>\r\n<!--      <ng-template #noUser>-->\r\n<!--        <a class=\"nav-item nav-link \" routerLink=\"/login\">-->\r\n<!--          Sign In-->\r\n<!--        </a>-->\r\n<!--        <a class=\"nav-item nav-link \" routerLink=\"/register\">-->\r\n<!--          Sign Up-->\r\n<!--        </a>-->\r\n<!--      </ng-template>-->\r\n    </div>\r\n  </div>\r\n</nav>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {ActivatedRoute} from '@angular/router';\r\nimport { OrderStatus } from 'src/app/enum/OrderStatus';\r\nimport { Roles } from 'src/app/enum/Roles';\r\nimport {JwtResponse} from '../../response/JwtResponse';\r\nimport {OrderService} from '../../common/httpService/order.service';\r\nimport {Subscription} from 'rxjs';\r\nimport {Order} from '../../models/Order';\r\nimport {UserService} from '../../common/httpService/user.service';\r\n\r\n@Component({\r\n  selector: 'app-order',\r\n  templateUrl: './order.component.html',\r\n  styleUrls: ['./order.component.scss']\r\n})\r\nexport class OrderComponent implements OnInit {\r\n\r\n  orders: any;\r\n  OrderStatus = OrderStatus;\r\n  currentUser: JwtResponse;\r\n  userId;\r\n  Role = Roles;\r\n      productId: string;\r\n\r\n  constructor(private httpClient: HttpClient,\r\n              private orderService: OrderService,\r\n              private userService: UserService,\r\n              private route: ActivatedRoute\r\n  ) {\r\n  }\r\n\r\n  querySub: Subscription;\r\n\r\n  ngOnInit() {\r\n    this.currentUser = this.userService.currentUserValue;\r\n    this.userId = this.route.snapshot.paramMap.get(\"id\");\r\n    this.productId = this.route.snapshot.paramMap.get('id');\r\n\r\n    // this.querySub = this.route.queryParams.subscribe(() => {\r\n      this.update();\r\n    // });\r\n\r\n  }\r\n\r\n  update() {\r\n    // let nextPage = 1;\r\n    // let size = 10;\r\n    // if (this.route.snapshot.queryParamMap.get('page')) {\r\n    //   nextPage = +this.route.snapshot.queryParamMap.get('page');\r\n    //   size = +this.route.snapshot.queryParamMap.get('size');\r\n    // }\r\n    this.orderService.geOrders(this.productId).subscribe( response => {\r\n      this.orders = response;\r\n      console.log(this.orders);\r\n    });\r\n  }\r\n\r\n\r\n  cancel(order: Order) {\r\n    this.orderService.cancel(order.orderId).subscribe(res => {\r\n      if (res) {\r\n        order.orderStatus = res.orderStatus;\r\n      }\r\n    });\r\n  }\r\n\r\n  finish(order: Order) {\r\n    this.orderService.finish(order.orderId).subscribe(res => {\r\n      if (res) {\r\n        order.orderStatus = res.orderStatus;\r\n      }\r\n    })\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.querySub.unsubscribe();\r\n  }\r\n\r\n}\r\n","<h1 align=\"center\" class=\"display-4 mb-5\">Orders</h1>\r\n\r\n<table class=\"table table-striped text-center\">\r\n  <thead>\r\n  <tr>\r\n    <th scope=\"col\">Order #</th>\r\n    <th scope=\"col\">Customer Name</th>\r\n    <th scope=\"col\">Customer Email</th>\r\n    <th scope=\"col\">Customer phone</th>\r\n    <th scope=\"col\">Shipping Address</th>\r\n    <th scope=\"col\">Total</th>\r\n    <th scope=\"col\">Order Data</th>\r\n    <th scope=\"col\">Status</th>\r\n    <th scope=\"col\">Action</th>\r\n  </tr>\r\n  </thead>\r\n  <tbody>\r\n\r\n  <tr *ngFor=\"let order of orders\">\r\n    <th class=\"align-middle\" scope=\"row\">\r\n      {{order.orderId}}\r\n    </th>\r\n    <td class=\"align-middle\">{{order.buyerName}}</td>\r\n    <td class=\"align-middle\">{{order.buyerEmail}}</td>\r\n    <td class=\"align-middle\">{{order.buyerPhone}}</td>\r\n    <td class=\"align-middle\">{{order.buyerAddress}}</td>\r\n    <td class=\"align-middle\">{{order.orderAmount | currency}}</td>\r\n    <td class=\"align-middle\">{{order.createTime | date}}</td>\r\n    <td class=\"align-middle\">{{OrderStatus[order.orderStatus]}}</td>\r\n    <td class=\"align-middle\">\r\n      <a *ngIf=\"!(currentUser.role == Role.Customer && currentUser.name == order.buyerEmail)\"\r\n         style=\"display:\r\n            block\" href=\"\" routerLink=\"/order/{{order.orderId}}\">\r\n        Show</a>\r\n      <a *ngIf=\"order.orderStatus == 0\" style=\"display: block\" (click)=\"cancel(order)\" routerLink=\"./\">Cancel</a>\r\n      <a *ngIf=\"currentUser.role != Role.Customer && order.orderStatus == 0\"\r\n         style=\"display: block\"\r\n         (click)=\"finish(order)\"\r\n         routerLink=\"./\">\r\n        Finish</a>\r\n    </td>\r\n  </tr>\r\n  </tbody>\r\n</table>\r\n\r\n<!--<app-pagination [currentPage]=\"page\"></app-pagination>-->\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {ProductInfo} from '../../models/productInfo';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport {HttpService} from '../../common/httpService/http.service';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-product-add',\r\n  templateUrl: './product-add.component.html',\r\n  styleUrls: ['./product-add.component.scss']\r\n})\r\nexport class ProductAddComponent implements OnInit {\r\n    product = new ProductInfo();\r\n\r\n\r\n  constructor(private route: ActivatedRoute,private router: Router,private toastr: ToastrService,private httpService: HttpService) { }\r\n\r\n\r\n productId: string;\r\n    isEdit = false;\r\n\r\n  ngOnInit(): void {\r\n\r\n  this.productId = this.route.snapshot.paramMap.get('id');\r\n            if (this.productId) {\r\n                this.isEdit = true;\r\n                }\r\n    }\r\n\r\n    onSubmit() {\r\n        this.product.sellerUserId = 1;\r\n\r\n    this.httpService.addProduct(this.product).subscribe(\r\n                                       data=>{\r\n\r\n                                                  this.toastr.success(\"Added product successfully\");\r\n                                                  this.router.navigate(['/product-list']);\r\n\r\n\r\n                                       },\r\n                                          error =>{\r\n                                                               console.log(\"fail2\");\r\n\r\n\r\n\r\n                                          });\r\n\r\n          }\r\n\r\n\r\n  ngAfterContentChecked(): void {\r\n              console.log(this.product);\r\n          }\r\n\r\n  }\r\n\r\n\r\n","<app-navigation-seller></app-navigation-seller>\r\n<h1 align=\"center\" class=\"display-4 mb-5\">Add Product</h1>\r\n<div style=\"width:40%; margin: 25px auto\">\r\n  <form #form=\"ngForm\" (ngSubmit)=\"onSubmit()\">\r\n    <!--Id-->\r\n<!--    <div class=\"form-group\">-->\r\n<!--      <label for=\"productId\">Product ID</label>-->\r\n<!--      <input  [(ngModel)]=\"product.productId\" type=\"text\"-->\r\n<!--             class=\"form-control form-control-lg\" #productIdInput-->\r\n<!--             id=\"productId\" name=\"productId\" required #productId=\"ngModel\">-->\r\n<!--      <div *ngIf=\"productIdInput.invalid && (productIdInput.dirty ||productIdInput.touched)\">-->\r\n<!--        <div *ngIf=\"productIdInput.errors.required\">-->\r\n<!--          ID is required.-->\r\n<!--        </div>-->\r\n<!--      </div>-->\r\n<!--    </div>-->\r\n\r\n    <div class=\"form-group\">\r\n      <label>Product Name</label>\r\n      <input [(ngModel)]=\"product.productName\" type=\"text\" class=\"form-control form-control-lg\" id=\"productName\"\r\n             #productName=\"ngModel\"\r\n             name=\"productName\" placeholder=\"Name\" required>\r\n\r\n    <div *ngIf=\"productName.invalid && (productName.dirty ||productName.touched)\">\r\n      <div *ngIf=\"productName.errors.required\">\r\n        Name is required.\r\n      </div>\r\n    </div>\r\n    </div>\r\n<!--Price-->\r\n<div class=\"form-group\">\r\n  <label for=\"productPrice\">Price</label>\r\n  <input class=\"form-control form-control-lg\"\r\n         type=\"number\"\r\n         id=\"productPrice\"\r\n         name=\"productPrice\"\r\n         #productPrice=\"ngModel\"\r\n         [ngModel]=\"product.productPrice\" (ngModelChange)=\"product.productPrice=$event\"\r\n         required>\r\n  <div *ngIf=\"productPrice.invalid && (productPrice.dirty ||productPrice.touched)\">\r\n    <div *ngIf=\"productPrice.errors.required\">\r\n      Price is required.\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!--Description-->\r\n<div class=\"form-group\">\r\n  <label>Description</label>\r\n  <textarea class=\"form-control form-control-lg text-left\"\r\n            id=\"productDescription\" name=\"productDescription\"\r\n            placeholder=\"Description\" [(ngModel)]=\"product.description\"></textarea>\r\n</div>\r\n  <!--Stock-->\r\n  <div class=\"form-group\">\r\n    <label for=\"productStock\">Stock</label>\r\n    <input class=\"form-control form-control-lg\"\r\n           type=\"number\"\r\n           id=\"productStock\"\r\n           name=\"productStock\"\r\n           min=\"0\" #productStock=\"ngModel\"\r\n           [(ngModel)]=\"product.productStock\"\r\n           required>\r\n    <div *ngIf=\"productStock.invalid && (productStock.dirty ||productStock.touched)\">\r\n      <div *ngIf=\"productStock.errors.required\">\r\n        Stock is required.\r\n      </div>\r\n    </div>\r\n  </div>\r\n    <!--Photo-->\r\n    <div class=\"form-group\">\r\n      <label>Product Icon</label>\r\n      <input [(ngModel)]=\"product.productIcon\" type=\"text\" class=\"form-control form-control-lg\" id=\"productIcon\"\r\n             name=\"productIcon\" placeholder=\"Photo\">\r\n    </div>\r\n\r\n  <div class=\"form-group\">\r\n    <label for=\"productStatus\">Status</label>\r\n    <select class=\"custom-select custom-select-lg \" id=\"productStatus\" name=\"productStatus\" required\r\n            [(ngModel)]=\"product.productStatus\">\r\n      <option [ngValue]=0>Available</option>\r\n      <option [ngValue]=1>Unavailable</option>\r\n    </select>\r\n  </div>\r\n\r\n\r\n\r\n    <!--Name-->\r\n\r\n    <!--Category-->\r\n    <div class=\"form-group\">\r\n      <label for=\"categoryType\">Category</label>\r\n      <select class=\"custom-select custom-select-lg \" id=\"categoryType\" name=\"categoryType\"\r\n              [(ngModel)]=\"product.categoryType\"\r\n              required>\r\n        <option >Grains & Flours</option>\r\n        <option >Masala & Spices</option>\r\n        <option >Dals</option>\r\n        <option >Dry fruits</option>\r\n        <option >Packed Product</option>\r\n        <option >Oil & Ghee</option>\r\n\r\n\r\n\r\n      </select>\r\n    </div>\r\n\r\n  <div class=\"form-group\">\r\n    <label for=\"productType\">Product Type</label>\r\n    <select class=\"custom-select custom-select-lg \" id=\"productType\" name=\"productType\"\r\n            [(ngModel)]=\"product.productType\"\r\n            required>\r\n      <option [ngValue]=0>Veg</option>\r\n      <option [ngValue]=1>Non-Veg</option>\r\n    </select>\r\n  </div>\r\n\r\n<!--  <div class=\"form-group\">-->\r\n<!--    <label for=\"quantity\">Quantity</label>-->\r\n<!--    <input class=\"form-control form-control-lg\"-->\r\n<!--           type=\"number\"-->\r\n<!--           id=\"quantity\"-->\r\n<!--           name=\"quantity\"-->\r\n<!--           min=\"0\" #quantity=\"ngModel\"-->\r\n<!--           [(ngModel)]=\"product.quantity\"-->\r\n<!--           required>-->\r\n<!--    <div *ngIf=\"quantity.invalid && (quantity.dirty ||quantity.touched)\">-->\r\n<!--      <div *ngIf=\"quantity.errors.required\">-->\r\n<!--        Quantity is required.-->\r\n<!--      </div>-->\r\n<!--    </div>-->\r\n<!--  </div>-->\r\n<!--  <div class=\"form-group\">-->\r\n<!--    <label>Unit</label>-->\r\n<!--    <input [(ngModel)]=\"product.unit\" type=\"text\" class=\"form-control form-control-lg\" id=\"unit\"-->\r\n<!--           #unit=\"ngModel\"-->\r\n<!--           name=\"unit\" placeholder=\"unit\" required>-->\r\n<!--  </div>-->\r\n<!--  <div *ngIf=\"unit.invalid && (unit.dirty ||unit.touched)\">-->\r\n<!--    <div *ngIf=\"unit.errors.required\">-->\r\n<!--      Unit is required.-->\r\n<!--    </div>-->\r\n<!--  </div>-->\r\n    <div class=\"form-group\">\r\n      <label for=\"unit\">Unit</label>\r\n      <select class=\"custom-select custom-select-lg \" id=\"unit\" name=\"unit\"\r\n              [(ngModel)]=\"product.unit\"\r\n              required>\r\n        <option >Kg</option>\r\n        <option >Ltr</option>\r\n      </select>\r\n    </div>\r\n\r\n    <div class=\"form-group\">\r\n    <label>Expiry Date</label>\r\n    <input [(ngModel)]=\"product.expiryDate\" type=\"date\" class=\"form-control form-control-lg\" id=\"expiryDate\"\r\n           #expiryDate=\"ngModel\"\r\n           name=\"expiryDate\" placeholder=\"expiryDate\" required>\r\n  </div>\r\n  <div *ngIf=\"expiryDate.invalid && (expiryDate.dirty ||expiryDate.touched)\">\r\n    <div *ngIf=\"expiryDate.errors.required\">\r\n      Date is required.\r\n    </div>\r\n  </div>\r\n\r\n    <div class=\"form-group\">\r\n      <button type=\"submit\"  class=\"btn btn-lg btn-primary btn-block\">Add Product</button>\r\n    </div>\r\n    <!--Status-->\r\n  </form>\r\n\r\n\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {ProductInfo} from '../../models/productInfo';\r\nimport {HttpService} from '../../common/httpService/http.service';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {ProductInOrder} from '../../models/ProductInOrder';\r\nimport {Cart} from '../../models/Cart';\r\nimport {OrderStatus} from '../../enum/OrderStatus';\r\n\r\n@Component({\r\n  selector: 'app-product-details',\r\n  templateUrl: './product-details.component.html',\r\n  styleUrls: ['./product-details.component.scss']\r\n})\r\nexport class ProductDetailsComponent implements OnInit {\r\n\r\n  title:string;\r\n  count;\r\n  shopName = 'Ram Traders';\r\n  productInfo: ProductInfo;\r\n  cartItem : Cart;\r\n  productList : ProductInOrder[] = [];\r\n\r\n  constructor(private http : HttpService,\r\n              private route : ActivatedRoute,\r\n              private router : Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.title = 'Product Detail';\r\n    this.count = 1;\r\n    let productId = this.route.snapshot.paramMap.get(\"id\");\r\n    this.loadProduct(productId);\r\n  }\r\n\r\n\r\n  loadProduct(id){\r\n    this.http.getProduct(id).subscribe( response => {\r\n      console.log(response);\r\n      this.productInfo = response;\r\n    })\r\n  }\r\n\r\n  addToCart(){\r\n    console.log(\"Added to Cart\");\r\n    // this.router.navigateByUrl('/cart/'+pro)\r\n    let productToOrder: ProductInOrder = new ProductInOrder(this.productInfo,this.count,this.shopName);\r\n    this.productList.push(productToOrder);\r\n    this.cartItem = new Cart();\r\n    this.cartItem.productInOrder = this.productList;\r\n    this.cartItem.businessDomain = this.productInfo.businessDomain;\r\n    this.cartItem.buyerId = 2;\r\n    this.cartItem.sellerId = this.productInfo.sellerUserId;\r\n    this.cartItem.cartId = Math.ceil(Math.random());\r\n    this.cartItem.status=OrderStatus.new;\r\n    console.log(this.cartItem);\r\n\r\n    this.http.addToCart(this.cartItem).subscribe( response => {\r\n      console.log(\"Succeessss\");\r\n      this.router.navigateByUrl('/cart');\r\n    });\r\n  }\r\n\r\n  validateCount() {\r\n    console.log('Validate');\r\n    const max = this.productInfo.productStock;\r\n    if (this.count > max) {\r\n      this.count = max;\r\n    } else if (this.count < 1) {\r\n      this.count = 1;\r\n    }\r\n    this.productInfo.quantity = this.count;\r\n  }\r\n\r\n}\r\n","<app-navigation></app-navigation>\r\n<div class=\"p-2\">\r\n  <h1 align=\"center\" class=\"display-4 mb-5\">{{title}}</h1>\r\n<mat-card class=\"example-card\">\r\n  <div class=\"flex-container\">\r\n    <div class=\"product-image\">\r\n      <img src=\"{{productInfo?.productIcon}}\">\r\n    </div>\r\n    <div class=\"product-details\">\r\n      <h4>{{productInfo?.productName}}</h4>\r\n\r\n      <form name=\"form\" #form='ngForm' (ngSubmit)=\"productInfo?.productStatus == 0\">\r\n        <div class=\"text-left\">\r\n          <input hidden name=\"productId\" [value]=productInfo?.productId>\r\n          <p class=\"card-test\"><strong>Description: </strong>{{productInfo?.description}}</p>\r\n          <p class=\"card-text\">\r\n            <strong>Price: </strong>\r\n            <label id=\"price\">{{productInfo?.productPrice | currency}}</label>\r\n          </p>\r\n          <p class=\"card-text\"><strong>Stock: </strong>{{productInfo?.productStock}}</p>\r\n\r\n          <label class=\"card-text\">\r\n            <strong>Quantity: </strong>\r\n            <input [(ngModel)]=count\r\n                   (change)=\"validateCount()\"\r\n                   type=\"number\"\r\n                   name=\"count\"\r\n                   required\r\n                   min=\"1\"\r\n                   [max]=productInfo?.productStock\r\n            >\r\n          </label>\r\n\r\n\r\n          <p class=\"card-text\"><strong>Subtotal: </strong>\r\n            <label id=\"subtotal\">{{count * productInfo?.productPrice | currency}}</label>\r\n          </p>\r\n        </div>\r\n        <button type=\"submit\" [disabled]=\"!form.form.valid\" *ngIf=\"productInfo?.productStatus == 0; else offBlock\"\r\n                class=\"btn btn-primary btn-lg\" (click)=\"addToCart()\"\r\n        >Add to Cart\r\n        </button>\r\n        <ng-template #offBlock><a class=\"btn btn-secondary btn-lg disabled\">Unavailable</a></ng-template>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</mat-card>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {ActivatedRoute, Router} from \"@angular/router\";\r\nimport {ProductInfo} from '../../models/productInfo';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport {HttpService} from '../../common/httpService/http.service';\r\n\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-product-edit',\r\n  templateUrl: './product-edit.component.html',\r\n  styleUrls: ['./product-edit.component.scss']\r\n})\r\nexport class ProductEditComponent implements OnInit {\r\n    product = new ProductInfo();\r\n\r\n  constructor(private route: ActivatedRoute,private router: Router,private toastr: ToastrService,private httpService: HttpService) { }\r\n\r\n productId: string;\r\n\r\n  ngOnInit(): void {\r\n\r\n   this.productId = this.route.snapshot.paramMap.get('id');\r\n            if (this.productId) {\r\n                      this.httpService.geOrders(this.productId).subscribe(prod => this.product = prod);\r\n                  }\r\n\r\n  }\r\n\r\n    update() {\r\n          this.httpService.updateProduct(this.product).subscribe(prod => {\r\n                  if (!prod) throw new Error();\r\n                  this.toastr.success(\"update your product successfully\");\r\n\r\n                 this.router.navigate(['/product-list']);\r\n              },\r\n              err => {\r\n              });\r\n\r\n      }\r\n\r\n   onSubmit() {\r\n           this.update();\r\n\r\n      }\r\n\r\n\r\n       ngAfterContentChecked(): void {\r\n              console.log(this.product);\r\n          }\r\n\r\n}\r\n","<app-navigation-seller></app-navigation-seller>\r\n\r\n<h1 align=\"center\" class=\"display-4 mb-5\">Edit Product</h1>\r\n<div style=\"width:40%; margin: 25px auto\">\r\n  <form #form=\"ngForm\" (ngSubmit)=\"onSubmit()\">\r\n    <!--Id-->\r\n<!--    <div class=\"form-group\">-->\r\n<!--      <label for=\"productId\">Code</label>-->\r\n<!--&lt;!&ndash;      <input  [(ngModel)]=\"product.productId\" type=\"text\"&ndash;&gt;-->\r\n<!--             class=\"form-control form-control-lg\" #productIdInput-->\r\n<!--             id=\"productId\" name=\"productId\" required #productId=\"ngModel\">-->\r\n<!--      <div *ngIf=\"productIdInput.invalid && (productIdInput.dirty ||productIdInput.touched)\">-->\r\n<!--        <div *ngIf=\"productIdInput.errors.required\">-->\r\n<!--          Name is required.-->\r\n<!--        </div>-->\r\n<!--      </div>-->\r\n<!--    </div>-->\r\n    <!--Photo-->\r\n    <div class=\"form-group\">\r\n      <label>Photo Link</label>\r\n      <input [(ngModel)]=\"product.productIcon\" type=\"text\" class=\"form-control form-control-lg\" id=\"productIcon\"\r\n             name=\"productIcon\" placeholder=\"Photo\">\r\n    </div>\r\n\r\n    <!--Name-->\r\n    <div class=\"form-group\">\r\n      <label>Name</label>\r\n      <input [(ngModel)]=\"product.productName\" type=\"text\" class=\"form-control form-control-lg\" #productNameInput id=\"productName\"\r\n             #productName=\"ngModel\"\r\n             name=\"productName\" placeholder=\"Name\" required>\r\n    </div>\r\n    <div *ngIf=\"productNameInput.invalid && (productNameInput.dirty ||productNameInput.touched)\">\r\n      <div *ngIf=\"productNameInput.errors.required\">\r\n        Name is required.\r\n      </div>\r\n    </div>\r\n\r\n    <!--Category-->\r\n    <div class=\"form-group\">\r\n      <label for=\"categoryType\">Category</label>\r\n      <select class=\"custom-select custom-select-lg \" id=\"categoryType\" name=\"categoryType\"\r\n              [(ngModel)]=\"product.categoryType\"\r\n              required>\r\n        <option>Books</option>\r\n        <option >Food</option>\r\n        <option >Clothes</option>\r\n        <option >Drink</option>\r\n      </select>\r\n    </div>\r\n\r\n    <!--Description-->\r\n    <div class=\"form-group\">\r\n      <label>Description</label>\r\n      <textarea class=\"form-control form-control-lg text-left\"\r\n                id=\"productDescription\" name=\"productDescription\"\r\n                placeholder=\"Description\" [(ngModel)]=\"product.description\"></textarea>\r\n    </div>\r\n    <!--Price-->\r\n    <div class=\"form-group\">\r\n      <label for=\"productPrice\">Price</label>\r\n      <input class=\"form-control form-control-lg\" #productPriceInput\r\n             type=\"number\"\r\n             id=\"productPrice\"\r\n             name=\"productPrice\"\r\n             #productPrice=\"ngModel\"\r\n             [ngModel]=\"product.productPrice\" (ngModelChange)=\"product.productPrice=$event\"\r\n             required>\r\n      <div *ngIf=\"productPrice.invalid && (productPriceInput.dirty ||productPriceInput.touched)\">\r\n        <div *ngIf=\"productPrice.errors.required\">\r\n          Price is required.\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!--Stock-->\r\n    <div class=\"form-group\">\r\n      <label for=\"productStock\">Stock</label>\r\n      <input class=\"form-control form-control-lg\" #productStockInput\r\n             type=\"number\"\r\n             id=\"productStock\"\r\n             name=\"productStock\"\r\n             min=\"0\" #productStock=\"ngModel\"\r\n             [(ngModel)]=\"product.productStock\"\r\n             required>\r\n      <div *ngIf=\"productStock.invalid && (productStockInput.dirty ||productStockInput.touched)\">\r\n        <div *ngIf=\"productStock.errors.required\">\r\n          Stock is required.\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!--Status-->\r\n    <div class=\"form-group\">\r\n      <label for=\"productStatus\">Status</label>\r\n      <select class=\"custom-select custom-select-lg \"  id=\"productStatus\" name=\"productStatus\" required\r\n              [(ngModel)]=\"product.productStatus\">\r\n        <option >Available</option>\r\n        <option >Unavailable</option>\r\n      </select>\r\n    </div>\r\n\r\n    <div class=\"form-group\">\r\n      <button type=\"submit\" [disabled]=\"!form.form.valid\" class=\"btn btn-lg btn-primary btn-block\">Submit</button>\r\n    </div>\r\n  </form>\r\n\r\n\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormBuilder,FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport {OnDestroy} from '@angular/core';\r\nimport {Subscription} from \"rxjs\";\r\nimport {ProductInfo} from '../../models/productInfo';\r\nimport {JwtResponse} from '../../response/JwtResponse';\r\n\r\nimport {HttpService} from '../../common/httpService/http.service'\r\nimport {UserService} from '../../common/httpService/user.service';\r\n\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-product-list',\r\n  templateUrl: './product-list.component.html',\r\n  styleUrls: ['./product-list.component.scss']\r\n})\r\nexport class ProductListComponent implements OnInit {\r\n\r\n title:string;\r\n  count;\r\nProductInfo : any;\r\ncurrentUser: JwtResponse;\r\n  userId;\r\n\r\n    product = new ProductInfo();\r\n\r\n\r\n\r\n  constructor(private formBuilder: FormBuilder,private router: Router,private httpService: HttpService,private userService: UserService,) { }\r\n\r\n\r\n  page: any;\r\n\r\n          private querySub: Subscription;\r\n\r\n\r\n  ngOnInit(): void {\r\n\r\nthis.currentUser = this.userService.currentUserValue;\r\n        this.update();\r\n\r\n  }\r\n  update(){\r\n\r\n    this.httpService.geOrders(this.product).subscribe( response => {\r\n      this.ProductInfo = response;\r\n      console.log(this.ProductInfo);\r\n    });\r\n  }\r\n\r\n\r\n}\r\n","<app-navigation-seller></app-navigation-seller>\r\n<h1 align=\"center\" class=\"display-4 \">Products</h1>\r\n<!--<a *ngIf=\"currentUser?.role == Roles.Customer\" style=\"color: inherit\"-->\r\n<!--   routerLink=\"/seller/product/new\" class=\"float-right mb-3\"><i class=\"fas fa-plus fa-2x\">Add</i>-->\r\n<!--</a>-->\r\n<table id=\"table\" class=\"table table-striped text-center\" style=\"width:100%;\">\r\n  <thead>\r\n  <tr>\r\n    <th scope=\"col\">Photo</th>\r\n    <th scope=\"col\">ID</th>\r\n    <th scope=\"col\">Name</th>\r\n    <th scope=\"col\">Price</th>\r\n    <th scope=\"col\">Description</th>\r\n    <th scope=\"col\">Stock</th>\r\n    <th scope=\"col\">Status</th>\r\n\r\n    <th scope=\"col\">Type</th>\r\n    <th scope=\"col\">Unit</th>\r\n    <th scope=\"col\">Quantity</th>\r\n    <th scope=\"col\">Expiry Date</th>\r\n\r\n    <th scope=\"col\">Action</th>\r\n  </tr>\r\n  </thead>\r\n  <tbody>\r\n<!--  <tr *ngFor=\"let productInfo of page?.content\">-->\r\n<tr *ngFor=\"let productInfo of ProductInfo\">\r\n  <th class=\"align-middle\" scope=\"row\">\r\n    <img height=\"100px\" src=\"{{productInfo.productIcon}}\" alt=\"{{productInfo.productName}}\">\r\n  </th>\r\n  <td class=\"align-middle\">{{productInfo.productId}}</td>\r\n  <td class=\"align-middle\">{{productInfo.productName}}</td>\r\n  <td class=\"align-middle\">{{productInfo.productPrice}}</td>\r\n  <td class=\"align-middle\">{{productInfo.productDescription}}</td>\r\n  <td class=\"align-middle\">{{productInfo.productStock}}</td>\r\n  <td class=\"align-middle\">{{productInfo.productStatus}}</td>\r\n  <td class=\"align-middle\">{{productInfo.categoryType}}</td>\r\n  <td class=\"align-middle\">{{productInfo.productType}}</td>\r\n  <td class=\"align-middle\">{{productInfo.unit}}</td>\r\n  <td class=\"align-middle\">{{productInfo.quantity}}</td>\r\n  <td class=\"align-middle\">{{productInfo.expiryDate}}</td>\r\n\r\n\r\n\r\n\r\n  <td class=\"align-middle\">\r\n<!--    <a style=\"display: block\" routerLink=\"/seller/product/{{productInfo.productId}}/edit\">-->\r\n<!--      Edit</a>-->\r\n      <a style=\"display: block\" routerLink=\"/product-edit/{{productInfo.productId}}\">\r\n        Edit</a>\r\n\r\n<!--      <a *ngIf=\"currentUser?.role == Roles.Customer\" style=\"display: block\"-->\r\n<!--         (click)=\"remove(page.content, productInfo.productId)\" routerLink=\"./\">-->\r\n<!--        Remove</a>-->\r\n    </td>\r\n</tr>\r\n\r\n\r\n\r\n  </tbody>\r\n</table>\r\n<!--<app-pagination [currentPage]=\"page\"></app-pagination>-->\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {Shop} from '../../models/shop';\r\nimport {HttpService} from '../../common/httpService/http.service';\r\nimport {ActivatedRoute} from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-shop-card',\r\n  templateUrl: './shop-card.component.html',\r\n  styleUrls: ['./shop-card.component.scss']\r\n})\r\nexport class ShopCardComponent implements OnInit {\r\n\r\n  domain:string;\r\n  title = this.domain;\r\n  userPinCode = '411038';\r\n\r\n  shops :Shop[];\r\n  //   = [\r\n  //   {\r\n  //     shopId : '1',\r\n  //     shopName : 'abc',\r\n  //     shopLocality : 'abc',\r\n  //     shopIcon : 'assets/images/groceries.jpg',\r\n  //     shopCategory : 1\r\n  //   },\r\n  //   {\r\n  //     shopId : '2',\r\n  //     shopName : 'abc',\r\n  //     shopLocality : 'abc',\r\n  //     shopIcon : 'assets/images/groceries.jpg',\r\n  //     shopCategory : 1\r\n  //   },\r\n  //   {\r\n  //     shopId : '3',\r\n  //     shopName : 'abc',\r\n  //     shopLocality : 'abc',\r\n  //     shopIcon : 'assets/images/groceries.jpg',\r\n  //     shopCategory : 1\r\n  //   },\r\n  //   {\r\n  //     shopId : '4',\r\n  //     shopName : 'abc',\r\n  //     shopLocality : 'abc',\r\n  //     shopIcon : 'assets/images/groceries.jpg',\r\n  //     shopCategory : 1\r\n  //   }\r\n  // ];\r\n\r\n\r\n  constructor( private http : HttpService,\r\n               private route : ActivatedRoute) { }\r\n\r\n  ngOnInit(): void {\r\n    this.domain = this.route.snapshot.paramMap.get(\"id\");\r\n    this.http.getAllShops(this.domain,this.userPinCode).subscribe( response =>{\r\n      console.log(response);\r\n      this.shops = response;\r\n      console.log(this.shops);\r\n    });\r\n  }\r\n\r\n}\r\n","<app-navigation></app-navigation>\r\n\r\n<h1 align=\"center\" class=\"display-4 mb-5 pt-2\">{{title}}</h1>\r\n\r\n<div class=\"outer-container p-2\">\r\n  <div *ngFor=\"let shopInfo of shops\" class=\"p-2 card-container\">\r\n    <mat-card class=\"example-card\">\r\n      <img mat-card-image src=\"assets/images/groceries.jpg\" alt=\"{{shopInfo.shopName}}\">\r\n      <mat-card-content>\r\n        <div><h4>{{shopInfo.shopName}}</h4></div>\r\n        <div>{{shopInfo.shopAddress}}</div>\r\n        <div>{{shopInfo.phone}}</div>\r\n      </mat-card-content>\r\n      <mat-card-actions>\r\n        <button mat-button class=\"action-button\" routerLink=\"/category/{{shopInfo.id}}\">Show Products</button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n\r\n</div>\r\n","export class OrderStatus {\r\n    public static new =\"New\";\r\n  public static finished =\"Finished\";\r\n  public static cancelled =\"Cancelled\";\r\n}\r\n","export class Roles {\r\n    public static Customer = 'CUSTOMER';\r\n    public static Seller = 'SELLER';\r\n    Manager = 'ROLE_MANAGER'\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.scss']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<br>\r\n\r\n<div>\r\n  <h1>WELCOME TO eLocalShoppie</h1>\r\n</div>\r\n<br>\r\n<br>\r\n<br>\r\n<app-register-s></app-register-s>\r\n","import {ProductInOrder} from './ProductInOrder';\r\n\r\n\r\nexport class Cart {\r\n    cartId: number;\r\n  buyerId: number;\r\n  sellerId: number;\r\n  businessDomain: string;\r\n  status: string;\r\n  productInOrder: ProductInOrder [];\r\n}\r\n","import {ProductInfo} from \"./productInfo\";\r\n\r\nexport class ProductInOrder {\r\n  sellerId: number;\r\n  productId: number;\r\n  productName: string;\r\n  productPrice: number;\r\n  shopName: string;\r\n  description: string;\r\n  productIcon: string;\r\n  productStatus: number;\r\n  productCategory: string;\r\n  productType: string;\r\n    count: number;\r\n    unit:string;\r\n\r\n    constructor(productInfo:ProductInfo, quantity = 1, shopname){\r\n      this.sellerId = productInfo.sellerUserId;\r\n      this.shopName = shopname;\r\n        this.productId = productInfo.productId;\r\n        this.productName = productInfo.productName;\r\n        this.productPrice = productInfo.productPrice;\r\n        this.description = productInfo.description;\r\n        this.productIcon = productInfo.productIcon;\r\n        this.productCategory = productInfo.categoryType;\r\n        this.unit = productInfo.unit;\r\n        this.productStatus = productInfo.productStatus;\r\n        this.productType = productInfo.productType;\r\n        this.count = quantity;\r\n    }\r\n}\r\n","import {Roles} from \"../enum/Roles\";\r\n\r\nexport class User {\r\n    url: string;\r\n        id : number;\r\n\r\n    username: string;\r\n\r\n    password: string;\r\n\r\n    name: string;\r\n\r\n    shopName: string;\r\n    shopIcon: string;\r\n    phone: string;\r\n    pinCode: string;\r\n    homeAddress:string;\r\n    shopAddress:string;\r\n    deliveryAddress:string;\r\n    gpayNumber:string;\r\n    gstNumber:string;\r\n    businessDomain:String;\r\n\r\n\r\n    active: boolean;\r\n\r\n    role: \"CUSTOMER\";\r\n\r\n    constructor(){\r\n\r\n\r\n        this.active = true;\r\n    }\r\n}\r\n","export class UserLogin {\r\n\r\n    username: string;\r\n\r\n    password: string;\r\n\r\n    phone: string;\r\n}\r\n","import {Roles} from \"../enum/Roles\";\r\n\r\nexport class Users {\r\n\r\n\r\n    url: string;\r\n    id : number;\r\n    username: string;\r\n\r\n    password: string;\r\n\r\n    name: string;\r\n\r\n    shopName: string;\r\n    shopIcon: string;\r\n    phone: string;\r\n    pinCode: string;\r\n    homeAddress:string;\r\n    shopAddress:string;\r\n    deliveryAddress:string;\r\n    gpayNumber:string;\r\n    gstNumber:string;\r\n    businessDomain:String;\r\n\r\n\r\n    active: boolean;\r\n\r\n    role: \"SELLER\";\r\n\r\n    constructor(){\r\n\r\n\r\n      this.active = true;\r\n\r\n    }\r\n}\r\n","import {ProductInOrder} from \"./ProductInOrder\";\r\n\r\nexport class ProductInfo {\r\n  productId: number;\r\n  sellerUserId: number;\r\n  productName: string;\r\n  productPrice: number;\r\n  description: string;\r\n  productStock: number;\r\n  productIcon: string;\r\n  productStatus: number; // 0: onsale 1: offsale\r\n  categoryType: string;\r\n  productType: string;\r\n  unit: string;\r\n  quantity: number;\r\n  businessDomain: string;\r\n  expiryDate: Date;\r\n  createTime: Date\r\n  updateTime: Date;\r\n}\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder,FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport {HttpService} from '../common/httpService/http.service'\r\n\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-otp-verification',\r\n  templateUrl: './otp-verification.component.html',\r\n  styleUrls: ['./otp-verification.component.scss']\r\n})\r\nexport class OtpVerificationComponent implements OnInit {\r\n\r\nloginForm: FormGroup;\r\n        submitted = false;\r\n\r\n\r\n  constructor(private formBuilder: FormBuilder,private router: Router,private toastr: ToastrService,private httpService: HttpService) { }\r\n\r\n  ngOnInit(): void {\r\n  this.loginForm = this.formBuilder.group({\r\n                    otpv: ['', Validators.required]\r\n                });\r\n  }\r\n  get f()\r\n        { return this.loginForm.controls; }\r\n\r\n    onSubmit() {\r\n            this.submitted = true;\r\n              this.httpService.verifyOtp(this.f.otpv,this.f.otpv).subscribe(\r\n                                   data=>{\r\n                                            this.toastr.success(\"ypu have successfully registered\");\r\n                                                                this.router.navigate(['/login']);\r\n\r\n\r\n                                   },\r\n                                      error =>{\r\n                                            this.toastr.error(\"please Enter valid OTP\");\r\n\r\n\r\n                                      });\r\n\r\n                      }\r\n\r\n\r\n}\r\n\r\n","<br>\r\n<br>\r\n<br>\r\n<br>\r\n\r\n<mat-card>\r\n\r\n    <mat-card-content class=\"align\"> Please Enter OTP  </mat-card-content>\r\n\r\n    <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\" class=\"custom-centered\">\r\n      <div class=\"form-group\">\r\n        <label >OTP</label>\r\n        <input type=\"number\" formControlName=\"otpv\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.otpv.errors }\" />\r\n\r\n\r\n        <div *ngIf=\"submitted && f.otpv.errors\" class=\"invalid-feedback\">\r\n          <div *ngIf=\"f.otp.errors.required\">OTP is required</div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <button  class=\"btn btn-primary\" >Submit OTP</button>\r\n      </div>\r\n\r\n\r\n    </form>\r\n\r\n\r\n<!--  <mat-card-actions>-->\r\n<!--    <button mat-button routerLink=\"/RegisterShopkeeper\" class=\"color\" >Register as a Shopkeeper</button>-->\r\n<!--    <button mat-button routerLink=\"/RegisterCustomer\" class=\"color\" >Register as a Customer</button>-->\r\n\r\n<!--  </mat-card-actions>-->\r\n</mat-card>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder,FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport {User} from '../models/User';\r\n\r\n\r\nimport {HttpService} from '../common/httpService/http.service'\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-register-c',\r\n  templateUrl: './register-c.component.html',\r\n  styleUrls: ['./register-c.component.scss']\r\n})\r\nexport class RegisterCComponent implements OnInit {\r\nloginForm: FormGroup;\r\notpForm: FormGroup;\r\n  user: User;\r\n\r\n        submitted = false;\r\n        checking = false;\r\n        registered = false;\r\n            loading = false;\r\n\r\n\r\n\r\n\r\n  constructor(private formBuilder: FormBuilder,private router: Router,private httpService: HttpService,private toastr: ToastrService) {\r\n      this.user = new User();\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n   this.loginForm = this.formBuilder.group({\r\n                    username: ['', Validators.required],\r\n                    password: ['', Validators.required],\r\n                    name: ['', Validators.required],\r\n                    deliveryAddress: ['', Validators.required],\r\n                    phone: ['', Validators.required],\r\n                    pinCode:['',Validators.required]\r\n\r\n\r\n\r\n                });\r\n\r\n                 this.otpForm = this.formBuilder.group({\r\n                                          otpv: ['', Validators.required]\r\n\r\n                   });\r\n  }\r\n\r\n  get f()\r\n        { return this.loginForm.controls; }\r\n\r\n        get m(){\r\n           return this.otpForm.controls;\r\n           }\r\n\r\n    onSubmit() {\r\n\r\n                  this.user.username = this.f.username.value;\r\n                  this.user.password = this.f.password.value;\r\n                  this.user.name = this.f.name.value;\r\n                  this.user.deliveryAddress = this.f.deliveryAddress.value;\r\n                  this.user.pinCode = this.f.pinCode.value;\r\n                  this.user.phone = this.f.phone.value;\r\n                  this.user.role = \"CUSTOMER\";\r\n                  this.user.id = 0;\r\n\r\n\r\n    this.submitted=true;\r\n    this.registered = true;\r\n\r\n\r\n                       this.httpService.getOtp(this.f.phone.value).subscribe(\r\n                                   data=>{\r\n\r\n                                                           console.log(\"success\");\r\n\r\n\r\n                                   },\r\n                                      error =>{\r\n                                                           console.log(\"fail2\");\r\n\r\n\r\n\r\n                                      });\r\n\r\n                      }\r\n\r\n\r\n\r\n\r\n\r\n\r\nsubmit()\r\n\r\n    {\r\n\r\n                  this.httpService.verifyOtp(this.f.phone.value,this.m.otpv.value).subscribe(\r\n                                       data=>{\r\n                                                console.log(\"success\");\r\n\r\n                                                this.httpService.signc(this.user).subscribe(\r\n\r\n                                                               data=>{\r\n                                                               this.toastr.success(\"successfully registered\");\r\n                                                               this.router.navigate(['/login']);\r\n\r\n                                                                },\r\n                                                                 error =>{\r\n                                                                                 console.log(\"user is already registered\");\r\n\r\n\r\n\r\n                                                   });\r\n\r\n                                       },\r\n                                          error =>{\r\n                                                this.toastr.error(\"please Enter valid OTP\");\r\n\r\n\r\n\r\n                                          });\r\n\r\n      }\r\n      }\r\n","<mat-card *ngIf=\"!registered\">\r\n  <div class=\"col-lg-1\">\r\n    <h2>Register</h2>\r\n    <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\" class=\"custom-centered\" >\r\n      <div class=\"form-group\">\r\n        <label >Name</label>\r\n        <input type=\"text\" formControlName=\"name\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.name.errors }\" />\r\n\r\n\r\n        <div *ngIf=\"submitted && f.name.errors\" class=\"invalid-feedback\">\r\n          <div *ngIf=\"f.name.errors.required\">Name is required</div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <label >Username</label>\r\n        <input type=\"text\" formControlName=\"username\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.username.errors }\" />\r\n        <div *ngIf=\"submitted && f.username.errors\" class=\"invalid-feedback\">\r\n          <div *ngIf=\"f.username.errors.required\">Username is required</div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n\r\n        <label >Password</label>\r\n        <input type=\"password\" formControlName=\"password\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\r\n\r\n        <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\r\n          <div *ngIf=\"f.password.errors.required\">Password is required</div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n\r\n        <label >Address</label>\r\n        <textarea formControlName=\"deliveryAddress\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.deliveryAddress.errors }\" ></textarea>\r\n\r\n        <div *ngIf=\"submitted && f.deliveryAddress.errors\" class=\"invalid-feedback\">\r\n          <div *ngIf=\"f.deliveryAddress.errors.required\">Address is required</div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <label >PinCode</label>\r\n        <input type=\"text\" formControlName=\"pinCode\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.pinCode.errors }\" />\r\n\r\n        <div *ngIf=\"submitted && f.pinCode.errors\" class=\"invalid-feedback\">\r\n          <div *ngIf=\"f.pinCode.errors.required\">PinCode is required</div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n\r\n        <label >Gpay Number</label>\r\n        <input type=\"text\" formControlName=\"phone\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.phone.errors }\" />\r\n\r\n        <div *ngIf=\"submitted && f.phone.errors\" class=\"invalid-feedback\">\r\n          <div *ngIf=\"f.phone.errors.required\">Number is required</div>\r\n          <div *ngIf=\"f.phone.hasError('max')\">\r\n            Enter 10 digit mobile number.\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n      <div class=\"form-group\">\r\n        <button  class=\"btn btn-primary\" type=\"submit\" >Register</button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</mat-card>\r\n<mat-card *ngIf=\"registered\" class=\"color\">\r\n\r\n  <mat-card-content class=\"align\"> Please Enter OTP  </mat-card-content>\r\n\r\n  <form [formGroup]=\"otpForm\" (ngSubmit)=\"submit()\" class=\"custom-centered\">\r\n    <div class=\"form-group\">\r\n      <label >OTP</label>\r\n      <input type=\"text\" formControlName=\"otpv\" class=\"form-control\"  />\r\n\r\n\r\n      <div *ngIf=\"submitted && m.otpv.errors\" class=\"invalid-feedback\">\r\n        <div *ngIf=\"m.otpv.errors.required\">OTP is required</div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"form-group\">\r\n      <button  class=\"btn btn-primary\"  type=\"submit\" >Submit OTP</button>\r\n    </div>\r\n\r\n\r\n  </form>\r\n\r\n\r\n  <!--  <mat-card-actions>-->\r\n  <!--    <button mat-button routerLink=\"/RegisterShopkeeper\" class=\"color\" >Register as a Shopkeeper</button>-->\r\n  <!--    <button mat-button routerLink=\"/RegisterCustomer\" class=\"color\" >Register as a Customer</button>-->\r\n\r\n  <!--  </mat-card-actions>-->\r\n</mat-card>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormBuilder,FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport {HttpService} from '../common/httpService/http.service'\r\nimport {UserLogin} from '../models/UserLogin';\r\nimport {User} from '../models/User';\r\nimport { Roles } from '../enum/Roles';\r\n\r\n\r\n\r\n\r\nexport interface Role {\r\n  value: string;\r\n  viewValue: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-register-s',\r\n  templateUrl: './register-s.component.html',\r\n  styleUrls: ['./register-s.component.scss']\r\n})\r\nexport class RegisterSComponent implements OnInit {\r\n    loginForm: FormGroup;\r\n        submitted = false;\r\n          IsCorrect = false;\r\n              checking = false;\r\n                user: UserLogin;\r\n                userResponse : User;\r\n\r\n\r\n\r\n         roles: Role[] = [\r\n            {value: 'shopkeeper-0', viewValue: 'Shopkeeper'},\r\n            {value: 'customer-1', viewValue: 'Customer'}\r\n          ];\r\n\r\n\r\n\r\n  constructor( private formBuilder: FormBuilder,private router: Router,private toastr: ToastrService,private httpService: HttpService) {\r\n        this.user = new UserLogin();\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n       this.loginForm = this.formBuilder.group({\r\n                  username: ['', Validators.required],\r\n                  password: ['', Validators.required],\r\n\r\n                 phone: ['', Validators.required]\r\n\r\n              });\r\n\r\n\r\n  }\r\n\r\n      get f()\r\n      { return this.loginForm.controls; }\r\n\r\n  onSubmit() {\r\n\r\n  this.user.username=this.f.username.value;\r\n  this.user.password = this.f.password.value;\r\n  this.user.phone = this.f.phone.value;\r\n\r\n     this.submitted = true;\r\n\r\n\r\n              // stop here if form is invalid\r\n\r\n\r\n\r\n     this.httpService.login(this.user).subscribe(\r\n     response=>{\r\n            console.log(\"success\");\r\n            this.userResponse = response\r\n            if(this.userResponse.role === \"CUSTOMER\")\r\n              this.router.navigate(['/homePage']);\r\n            else if (this.userResponse.role === \"SELLER\")\r\n              this.router.navigate(['/product-list']);\r\n\r\n     },\r\n        error =>{\r\n              this.toastr.error(\"You need to register first\");\r\n\r\n        });\r\n\r\n }\r\nnavigate(){\r\nif(this.loginForm.valid)\r\n{\r\n  this.IsCorrect = true;\r\n  this.router.navigate(['/homePage']);\r\n  }\r\n  else\r\n  {\r\n  this.IsCorrect = false;\r\n  }\r\n\r\n}\r\n\r\n\r\n  goToHomePage(){\r\n    this.router.navigate(['/app-home-page']);\r\n  }\r\n\r\nroute(){\r\nthis.router.navigate(['/app-register-c']);\r\n}\r\n}\r\n","<mat-card>\r\n<div class=\"col-lg-1\">\r\n\r\n  <mat-card-title class=\"align\"> Login </mat-card-title>\r\n\r\n<form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\" class=\"custom-centered\">\r\n    <div class=\"form-group\">\r\n      <label >Username</label>\r\n    <input type=\"text\" formControlName=\"username\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.username.errors }\" />\r\n\r\n\r\n          <div *ngIf=\"submitted && f.username.errors\" class=\"invalid-feedback\">\r\n      <div *ngIf=\"f.username.errors.required\">Username is required</div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"form-group\">\r\n\r\n    <label >Password</label>\r\n    <input type=\"password\" formControlName=\"password\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\r\n\r\n    <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\r\n      <div *ngIf=\"f.password.errors.required\">Password is required</div>\r\n    </div>\r\n  </div>\r\n\r\n\r\n  <div class=\"form-group\">\r\n\r\n    <label >Registered Mobile Number</label>\r\n    <input type=\"text\" formControlName=\"phone\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.phone.errors }\" />\r\n\r\n    <div *ngIf=\"submitted && f.phone.errors\" class=\"invalid-feedback\">\r\n      <div *ngIf=\"f.phone.errors.required\">Mobile Number is required</div>\r\n    </div>\r\n  </div>\r\n\r\n<!--  <div class=\"form-group\">-->\r\n<!--    <label >Login as </label>-->\r\n\r\n<!--    <select class=\"custom-select\" formControlName=\"role\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.role.errors }\">-->\r\n<!--&lt;!&ndash;      <option value=\"\" >L</option>&ndash;&gt;-->\r\n<!--      <option>Customer</option>-->\r\n<!--      <option>Seller</option>-->\r\n<!--      <option>Admin</option>-->\r\n<!--    </select>-->\r\n<!--    <div *ngIf=\"submitted && f.role.errors\" class=\"invalid-feedback\">-->\r\n<!--      <div *ngIf=\"f.role.errors.required\">role is required</div>-->\r\n\r\n<!--  </div>-->\r\n<!--  </div>-->\r\n\r\n\r\n\r\n\r\n  <div class=\"form-group\">\r\n    <button  class=\"btn btn-primary\"  >Login</button>\r\n  </div>\r\n\r\n\r\n</form>\r\n\r\n</div>\r\n  <mat-card-actions>\r\n    <button mat-button routerLink=\"/RegisterShopkeeper\" class=\"color\" >Register as a Shopkeeper</button>\r\n    <button mat-button routerLink=\"/RegisterCustomer\" class=\"color\" >Register as a Customer</button>\r\n\r\n  </mat-card-actions>\r\n</mat-card>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormBuilder,FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport {HttpService} from '../common/httpService/http.service'\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport {Users} from '../models/Users';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-registers',\r\n  templateUrl: './registers.component.html',\r\n  styleUrls: ['./registers.component.scss']\r\n})\r\nexport class RegistersComponent implements OnInit {\r\nloginForm: FormGroup;\r\notpForm : FormGroup;\r\n        submitted = false;\r\n                      checking = false;\r\n                      registered = false;\r\n  user: Users;\r\n\r\n        phone: FormControl;\r\n        businessDomain = new FormControl();\r\n                  BdomainList: string[] = ['Medicines', 'Fruits & Vegetables', 'Grocery & Household', 'Personal & Baby Care'];\r\n\r\n\r\n\r\n  constructor( private formBuilder: FormBuilder,private router: Router,private httpService: HttpService,private toastr: ToastrService) {\r\n     this.user = new Users();\r\n\r\n}\r\n\r\n  ngOnInit() {\r\n  this.loginForm = this.formBuilder.group({\r\n                      username: ['', Validators.required],\r\n                      password: ['', Validators.required],\r\n                      name: ['', Validators.required],\r\n                      shopAddress: ['', Validators.required],\r\n                       pinCode: ['', Validators.required],\r\n\r\n                     gstNumber: ['', Validators.required],\r\n                       businessDomain: ['', Validators.required],\r\n                       phone: ['', Validators.required]\r\n\r\n\r\n\r\n\r\n\r\n\r\n                  });\r\n   this.otpForm = this.formBuilder.group({\r\n                          otpv: ['', Validators.required]\r\n\r\n   });\r\n\r\n          ;\r\n  }\r\n\r\n  verify(){\r\n    if (this.loginForm.invalid){\r\n            this.router.navigate(['/OTPVerification']);\r\n\r\n  }\r\n\r\n\r\n  }\r\n\r\n  get f()\r\n        { return this.loginForm.controls; }\r\n\r\n   get m(){\r\n   return this.otpForm.controls;\r\n   }\r\n\r\n    onSubmit()\r\n\r\n   {\r\n    this.user.username = this.f.username.value;\r\n              this.user.password = this.f.password.value;\r\n              this.user.name = this.f.name.value;\r\n              this.user.shopAddress = this.f.shopAddress.value;\r\n              this.user.pinCode = this.f.pinCode.value;\r\n              this.user.gstNumber = this.f.gstNumber.value;\r\n              this.user.businessDomain = this.f.businessDomain.value;\r\n              this.user.phone = this.f.phone.value;\r\n              this.user.role = \"SELLER\";\r\n              this.user.id = 0\r\n\r\n                          this.registered = true;\r\n\r\n                          this.httpService.getOtp(this.f.phone.value).subscribe(\r\n                                      data=>{\r\n\r\n                                                              console.log(\"success\");\r\n\r\n\r\n                                      },\r\n                                         error =>{\r\n                                                              console.log(\"fail\");\r\n\r\n\r\n                                         });\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                 // stop here if form is invalid\r\n\r\n\r\n\r\n    }\r\n\r\n    submit()\r\n    {\r\n                  this.httpService.verifyOtp(this.f.phone.value,this.m.otpv.value).subscribe(\r\n                                       data=>{\r\n                                                console.log(\"success\");\r\n                                                 this.httpService.signups(this.user).subscribe(\r\n\r\n                                                           data=>{\r\n                                                           this.toastr.success(\"successfully registered\");\r\n                                                        this.router.navigate(['/login']);\r\n\r\n                                                           },\r\n                                                         error =>{\r\n                                                    console.log(\"user is already registered\");\r\n                                                });\r\n\r\n\r\n                                       },\r\n                                          error =>{\r\n\r\n                                                this.toastr.error(\"please Enter valid OTP\");\r\n\r\n\r\n                                          });\r\n\r\n      }\r\n      }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","<mat-card *ngIf=\"!registered\">\r\n  <div class=\"col-lg-1\">\r\n    <h2>Register</h2>\r\n    <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\" class=\"custom-centered\">\r\n      <div class=\"form-group\">\r\n        <label >Name</label>\r\n        <input type=\"text\" formControlName=\"name\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.name.errors }\" />\r\n\r\n\r\n        <div *ngIf=\"submitted && f.name.errors\" class=\"invalid-feedback\">\r\n          <div *ngIf=\"f.name.errors.required\">Name is required</div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <label >Username</label>\r\n        <input type=\"text\" formControlName=\"username\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.username.errors }\" />\r\n        <div *ngIf=\"submitted && f.username.errors\" class=\"invalid-feedback\">\r\n          <div *ngIf=\"f.username.errors.required\">Username is required</div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n\r\n        <label >Password</label>\r\n        <input type=\"password\" formControlName=\"password\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\r\n\r\n        <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\r\n          <div *ngIf=\"f.password.errors.required\">Password is required</div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n\r\n        <label >Address</label>\r\n        <textarea formControlName=\"shopAddress\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.shopAddress.errors }\" ></textarea>\r\n\r\n        <div *ngIf=\"submitted && f.shopAddress.errors\" class=\"invalid-feedback\">\r\n          <div *ngIf=\"f.shopAddress.errors.required\">Address is required</div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <label >PinCode</label>\r\n        <input type=\"text\" formControlName=\"pinCode\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.pinCode.errors }\" />\r\n\r\n        <div *ngIf=\"submitted && f.pinCode.errors\" class=\"invalid-feedback\">\r\n          <div *ngIf=\"f.pinCode.errors.required\">PinCode is required</div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n\r\n        <label >Gpay Number</label>\r\n        <input type=\"text\" formControlName=\"phone\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.phone.errors }\" />\r\n\r\n        <div *ngIf=\"submitted && f.phone.errors\" class=\"invalid-feedback\">\r\n          <div *ngIf=\"f.phone.errors.required\">Number is required</div>\r\n          <div *ngIf=\"f.phone.hasError('max')\">\r\n            Enter 10 digit mobile number.\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n\r\n        <label >GST Number</label>\r\n        <input type=\"text\" formControlName=\"gstNumber\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.gstNumber.errors }\" />\r\n\r\n        <div *ngIf=\"submitted && f.gstNumber.errors\" class=\"invalid-feedback\">\r\n          <div *ngIf=\"f.gstNumber.errors.required\">Number is required</div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-group\" >\r\n        <mat-form-field style=\"width:100%\">\r\n          <mat-select placeholder=\"Business Domain\" formControlName=\"businessDomain\"  style=\"width:100%\"  [ngClass]=\"{ 'is-invalid': submitted && f.businessDomain.errors }\">\r\n            <mat-option *ngFor=\"let bd of BdomainList\" [value]=\"bd\">{{bd}} </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n        <div *ngIf=\"submitted && f.businessDomain.errors\" class=\"invalid-feedback\">\r\n          <div *ngIf=\"f.businessDomain.errors.required\">Domain is required</div>\r\n        </div>\r\n      </div>\r\n\r\n\r\n\r\n      <div class=\"form-group\">\r\n        <button  class=\"btn btn-primary\" >Register</button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</mat-card>\r\n\r\n<br>\r\n<br>\r\n<br>\r\n<br>\r\n\r\n<mat-card *ngIf=\"registered\" class=\"color\">\r\n\r\n\r\n  <mat-card-content class=\"align\"> Please Enter OTP  </mat-card-content>\r\n\r\n  <form [formGroup]=\"otpForm\" (ngSubmit)=\"submit()\" class=\"custom-centered\">\r\n    <div class=\"form-group\">\r\n      <label >OTP</label>\r\n      <input type=\"text\" formControlName=\"otpv\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && m.otpv.errors }\" />\r\n\r\n\r\n      <div *ngIf=\"submitted && m.otpv.errors\" class=\"invalid-feedback\">\r\n        <div *ngIf=\"m.otpv.errors.required\">OTP is required</div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"form-group\">\r\n      <button  class=\"btn btn-primary\" >Submit OTP</button>\r\n    </div>\r\n\r\n\r\n  </form>\r\n\r\n\r\n  <!--  <mat-card-actions>-->\r\n  <!--    <button mat-button routerLink=\"/RegisterShopkeeper\" class=\"color\" >Register as a Shopkeeper</button>-->\r\n  <!--    <button mat-button routerLink=\"/RegisterCustomer\" class=\"color\" >Register as a Customer</button>-->\r\n\r\n  <!--  </mat-card-actions>-->\r\n</mat-card>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\nexport const apiUrl = 'http://localhost:8090';\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}